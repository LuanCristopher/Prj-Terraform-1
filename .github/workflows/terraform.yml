name: Terraform Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Fazer checkout do código
      - name: Checkout do repositório
        uses: actions/checkout@v3

      # Passo 2: Configurar Terraform
      - name: Configurar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      # Passo 3: Configurar credenciais do GCP
      - name: Configurar credenciais do GCP
        run: |
          printf '%s' "${{ secrets.GOOGLE_CREDENTIALS }}" > /home/runner/gcp-key.json

      # Passo 4: Validar arquivo JSON
      - name: Validar arquivo JSON
        run: |
          cat /home/runner/gcp-key.json | jq

      # Passo 5: Inicializar Terraform
      - name: Inicializar Terraform
        run: terraform init
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/gcp-key.json

      # Passo 6: Validar arquivos Terraform
      - name: Validar arquivos Terraform
        run: terraform validate
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/gcp-key.json

      # Passo 7: Verificar formatação dos arquivos
      - name: Verificar formatação dos arquivos
        run: terraform fmt -check
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/gcp-key.json

      # Passo 8: Gerar plano Terraform
      - name: Gerar plano Terraform
        run: terraform plan
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/gcp-key.json

      # Passo 9: Aplicar mudanças Terraform (manual)
      - name: Aplicar mudanças Terraform
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/gcp-key.json
